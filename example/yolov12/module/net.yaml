auto_register:
  - ./example/yolov12/module/module.yaml

YOLOv12:
  args: [in_ch, class_num, scale: "~n"]
  # prettier-ignore
  vars:
    - scales:
        # depth, width, max_ch
        n: [0.50, 0.25, 1024]
        s: [0.50, 0.50, 1024]
        m: [0.50, 1.00, 512]
        l: [1.00, 1.00, 512]
        x: [1.00, 1.50, 512]
    - original_n: [2, 2, 4, 4, 2, 2, 2, 2]
    - original_ch: [64, 128, 256, 256, 512, 512, 512, 1024, 1024, 512, 256, 256, 512, 512, 1024]
    - n: "[int(x * scales[scale][0]) for x in original_n]"
    - c: "[min(int(x * scales[scale][1]), scales[scale][2]) for x in original_ch]"
    - Concat: "lambda *x: torch.cat(x, 1)"
  # prettier-ignore
  layers:
    # backbone
    - [-1, Conv,  [in_ch,  "c[0]"], { k: 3, s: 2 }]
    - [-1, Conv,  ["c[0]", "c[1]"], { k: 3, s: 2 }]
    - [-1, C3k2,  ["c[1]", "c[2]"], { n: "n[0]", c3k: False, e: 0.25 }]
    - [-1, Conv,  ["c[2]", "c[3]"], { k: 3, s: 2 }]
    - [-1, C3k2,  ["c[3]", "c[4]"], { n: "n[1]", c3k: False, e: 0.25 }]
    - [-1, Conv,  ["c[4]", "c[5]"], { k: 3, s: 2 }]
    - [-1, A2C2f, ["c[5]", "c[6]"], { n: "n[2]", a2: True, area: 4 }]
    - [-1, Conv,  ["c[6]", "c[7]"], { k: 3, s: 2 }]
    - [-1, A2C2f, ["c[7]", "c[8]"], { n: "n[3]", a2: True, area: 1 }]
    # head
    - [-1, nn.Upsample, { size: None, scale_factor: 2 }]
    - [[-1, 7], Concat]
    - [-1, A2C2f, ["c[8]+c[6]", "c[9]"], { n: "n[4]", a2: False, area: -1 }]

    - [-1, nn.Upsample, { size: None, scale_factor: 2 }]
    - [[-1, 5], Concat]
    - [-1, A2C2f, ["c[9]+c[4]", "c[10]"], { n: "n[5]", a2: False, area: -1 }]

    - [-1, Conv, ["c[10]", "c[11]"], { k: 3, s: 2 }]
    - [[-1, 12], Concat]
    - [-1, A2C2f, ["c[11]+c[9]", "c[12]"], { n: "n[6]", a2: False, area: -1 }]

    - [-1, Conv, ["c[12]", "c[13]"], { k: 3, s: 2 }]
    - [[-1, 9], Concat]
    - [-1, C3k2, ["c[13]+c[8]", "c[14]"], { n: "n[7]", c3k: False, e: 0.25 }]
